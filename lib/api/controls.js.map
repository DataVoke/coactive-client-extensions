{"version":3,"sources":["../../src/api/controls.js"],"names":["api","loadExtension","controls","ProgressBar","parent","maxValue","messageText","progressText","show","LO","zebra","layout","UI","ui","StackLayout","openForms","active","raw","rootPanel","_barWidth","_barHeight","_maxValue","_progressSize","_value","setBackground","setVisible","add","panelCenter","Panel","FlowLayout","CENTER","VERTICAL","labelPanel","BorderLayout","setPreferredSize","labelMessage","Label","setColor","setFont","Font","LEFT","labelProgress","RIGHT","panelBorder","progressBar","color","value","progressSize","toFixed","setValue","repaint","text","barHeight","barWidth","fontSize","setProgressValues","getValue","undefined","removeMe"],"mappings":"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","sourcesContent":["/**\n * Extends the api.controls namespace with additional helper functions.\n * Dependencies:\n *    api.loadExtension\n */\napi.loadExtension(\"api.controls\",() => {\n    if (!api.controls.ProgressBar) {\n        /**\n         * Create a progress bar control\n         *\n         * Example Use:\n         * var pb = new api.controls.ProgressBar();\n         * pb.maxValue = 2000; //Set max value\n         * pb.value = 100; //set Value\n         * pb.message = 'Test Message' //set the message\n         * pb.progressMessage = \"100/2000\" //set the progress message\n         *\n         * OR\n         *\n         * var pb = new api.controls.ProgressBar(api.openForms.active.raw.rootPanel.parent, 2000,\"Test Message\", \"100/2000\");\n         * pb.value = 100;\n         *\n         * @type {api.controls.ProgressBar}\n         */\n        api.controls.ProgressBar = class extends zebra.ui.Panel {\n            /**\n             * Create the progress bar\n             * @param parent The control you want to progress to appear in. blank will default to the current form.\n             * @param maxValue The max progress value\n             * @param messageText The message text (left Side)\n             * @param progressText the progress text (right Side)\n             * @param show (Show or hide the progress\n             */\n            constructor(parent, maxValue = 100, messageText = \"Initializing...\", progressText = \"\", show = true){\n                //Create progress bar\n                const LO = zebra.layout;\n                const UI = zebra.ui;\n                super(new LO.StackLayout());\n                if (parent == null) {\n                    parent = api.openForms.active.raw.rootPanel.parent;\n                }\n\n                //Set the defaults to the Progress bar control\n                this._barWidth = 500;\n                this._barHeight = 35;\n                this._maxValue = maxValue;\n                this._progressSize = 0;\n                this._value = 0;\n                parent.layout = new LO.StackLayout();\n                this.setBackground(\"#000000CC\");\n                this.setVisible(show);\n                parent.add(this);\n\n                //Create the Center panel that holds the progress bar\n                this.panelCenter = new UI.Panel(new LO.FlowLayout(LO.CENTER, LO.CENTER, LO.VERTICAL, 3));\n                this.panelCenter.setBackground(\"transparent\");\n                this.add(this.panelCenter);\n\n                //Create the labels Panel\n                this.labelPanel = new UI.Panel(new LO.BorderLayout());\n                this.labelPanel.setPreferredSize(this._barWidth, -1);\n                this.panelCenter.add(this.labelPanel);\n\n                //Create the progress message\n                this.labelMessage = new UI.Label(messageText);\n                this.labelMessage.setColor(\"#ffffff\");\n                this.labelMessage.setFont(new UI.Font(\"Sans-Serif\", 16));\n                this.labelPanel.add(LO.LEFT, this.labelMessage);\n\n                //Create the progress label\n                this.labelProgress = new UI.Label(progressText);\n                this.labelProgress.setColor(\"#ffffff\");\n                this.labelProgress.setFont(new UI.Font(\"Sans-Serif\", 16));\n                this.labelPanel.add(LO.RIGHT, this.labelProgress);\n\n                //Create the progress bars border panel\n                this.panelBorder = new UI.Panel(new LO.FlowLayout(LO.LEFT, LO.CENTER));\n                this.panelBorder.setPreferredSize(this._barWidth, this._barHeight);\n                this.panelBorder.setBackground(\"#999999\");\n                this.panelCenter.add(this.panelBorder);\n\n                //Create Progress bar\n                this.progressBar =  new UI.Panel(new LO.FlowLayout(LO.LEFT, LO.CENTER));\n                this.progressBar.setPreferredSize(0, this._barHeight);\n                this.progressBar.setBackground(\"#6ae78d\");\n                this.panelBorder.add(this.progressBar);\n\n            }\n\n            /**\n             * set the maxValue of the progress bar\n             */\n            set maxValue(value){\n                this._maxValue = value;\n                this.setProgressValues(this._value, this.labelMessage.getValue(), this.labelProgress.getValue());\n            }\n\n            /**\n             * get the max value of the progress bar\n             * @returns {*} Returns the max Value.\n             */\n            get maxValue(){\n                return this._maxValue;\n            }\n\n            /**\n             * set the value of the progress bar\n             * @param value The value to set\n             */\n            set value(value){\n                this._value = value;\n                this.setProgressValues(value, this.labelMessage.getValue(), this.labelProgress.getValue());\n            }\n\n            /**\n             * Get the current value of the progress bar.\n             * @returns The value of the progress bar.\n             */\n            get value(){\n                return this._value\n            }\n\n            /**\n             * Set the progress message\n             * @param text The progress message\n             */\n            set message(text){\n                this.labelMessage.setValue(text);\n            }\n\n            /**\n             * Get the progress message\n             * @returns {*} The progress message\n             */\n            get message() {\n                return this.labelMessage.getValue();\n            }\n\n            /**\n             * set the progress value label text (Right Side message\n             * @param text The progress value label text\n             */\n            set progressMessage(text){\n                this.labelProgress.setValue(text);\n            }\n\n            /**\n             * Get the progress value label text (Right Side message)\n             * @returns {*} The progress value label text\n             */\n            get progressMessage() {\n                return this.labelProgress.getValue();\n            }\n\n            /**\n             * Set the progress bar color\n             * @param color  The color of the progress bar\n             */\n            setProgressBarColor(color) {\n                this.progressBar.setBackground(color);\n            }\n\n            /**\n             * Set the progress container panels back color\n             * @param color  The color of the progress container panel\n             */\n            setProgressPanelColor(color) {\n                this.panelBorder.setBackground(color);\n            }\n\n            /**\n             * Set the progress background color. This is the opaque color of the progress bars background, \"DEFAULT: #000000CC\"\n             * @param color  The color to set the background\n             */\n            setBackgroundColor(color) {\n                this.setBackground(color);\n            }\n\n            /**\n             * Set the progress value and label text of the progress bar\n             * @param value The value of the progress bar\n             * @param messageText The message text\n             * @param progressText The progress text\n             */\n            setProgressValues(value, messageText = \"\", progressText = \"\"){\n                //Calculate the size of the progress bar...\n                var progressSize = ((value/this._maxValue) * this._barWidth).toFixed(0);\n                if(progressSize > this._barWidth) {progressSize = this._barWidth;}\n\n                this._progressSize = progressSize;\n                this._value = value;\n                this.progressBar.setPreferredSize(progressSize, this._barHeight);\n\n                this.labelMessage.setValue(messageText);\n                this.labelProgress.setValue(progressText);\n\n                this.repaint();\n            }\n\n            /**\n             * Set the Message text of the progress bar (Left Message Text\n             * @param text  The text to update the message to\n             */\n            setMessageText(text){\n                this.labelMessage.setValue(text);\n                this.repaint();\n            }\n\n            /**\n             * Set the progress value text of the progress bar (Right Message Text)\n             * @param text The text to update the label to\n             */\n            setProgressText(text){\n                this.labelProgress.setValue(text);\n                this.repaint();\n            }\n\n            /**\n             * Resize the progress bar to be the size specified\n             * @param barHeight The height of the bar\n             * @param barWidth The Width of the bar\n             * @param fontSize The new font size of the text\n             */\n            resizeProgressBar(barHeight, barWidth, fontSize = 16){\n                this._barWidth = barWidth;\n                this._barHeight = barHeight;\n                this.panelBorder.setPreferredSize(this._barWidth, this._barHeight);\n                this.progressBar.setPreferredSize(0, this._barHeight);\n                this.labelPanel.setPreferredSize(this._barWidth, -1);\n                this.labelProgress.setFont(new zebra.ui.Font(\"Sans-Serif\", fontSize));\n                this.labelMessage.setFont(new zebra.ui.Font(\"Sans-Serif\", fontSize));\n\n                this.setProgressValues(this._value, this.labelMessage.getValue(), this.labelProgress.getValue());\n            }\n\n            /**\n             * Show the progess bar\n             */\n            show() {\n                this.setVisible(true)\n            }\n\n            /**\n             * hide the progress bar\n             */\n            hide() {\n                this.setVisible(false)\n            }\n\n            /**\n             * Dispose and remove the progress bar\n             */\n            dispose() {\n                this._barWidth = undefined;\n                this._barHeight = undefined;\n                this.panelBorder = undefined;\n                this.progressBar = undefined;\n                this.labelPanel = undefined;\n                this.labelMessage = undefined;\n                this.labelProgress = undefined;\n                this.panelCenter = undefined\n                this._maxValue = undefined;\n                this._value = undefined;\n                this._progressSize = undefined;\n                this.removeMe();\n            }\n        };\n    }\n});\n"],"file":"controls.js"}